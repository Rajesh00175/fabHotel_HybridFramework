<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="5" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Regression Suite" duration-ms="40064" started-at="2018-08-09T09:07:56Z" finished-at="2018-08-09T09:08:36Z">
    <groups>
    </groups>
    <test name="Regression Testing" duration-ms="40064" started-at="2018-08-09T09:07:56Z" finished-at="2018-08-09T09:08:36Z">
      <class name="com.FabHotel_MVN_sprint1.Hotel_ListPageTest">
        <test-method status="FAIL" signature="TestFilter()[pri:0, instance:com.FabHotel_MVN_sprint1.Hotel_ListPageTest@32eebfca]" name="TestFilter" duration-ms="2349" started-at="2018-08-09T14:38:33Z" finished-at="2018-08-09T14:38:36Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 2, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 2, Size: 1
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementListHandler.invoke(LocatingElementListHandler.java:39)
	at com.sun.proxy.$Proxy12.get(Unknown Source)
	at pageObject.Hotel_List_Page.clearFilter(Hotel_List_Page.java:84)
	at com.FabHotel_MVN_sprint1.Hotel_ListPageTest.TestFilter(Hotel_ListPageTest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestFilter -->
        <test-method status="PASS" signature="selectHotelFromList()[pri:0, instance:com.FabHotel_MVN_sprint1.Hotel_ListPageTest@32eebfca]" name="selectHotelFromList" duration-ms="1" started-at="2018-08-09T14:38:36Z" finished-at="2018-08-09T14:38:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectHotelFromList -->
      </class> <!-- com.FabHotel_MVN_sprint1.Hotel_ListPageTest -->
      <class name="com.FabHotel_MVN_sprint1.Search_HotelTest">
        <test-method status="PASS" signature="SearchHotel()[pri:0, instance:com.FabHotel_MVN_sprint1.Search_HotelTest@28ac3dc3]" name="SearchHotel" duration-ms="10444" started-at="2018-08-09T14:38:23Z" finished-at="2018-08-09T14:38:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchHotel -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.FabHotel_MVN_sprint1.Search_HotelTest@28ac3dc3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-08-09T14:38:23Z" finished-at="2018-08-09T14:38:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.FabHotel_MVN_sprint1.Search_HotelTest.SearchHotel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.FabHotel_MVN_sprint1.Search_HotelTest@28ac3dc3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-08-09T14:38:33Z" finished-at="2018-08-09T14:38:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchHotel status=SUCCESS method=Search_HotelTest.SearchHotel()[pri:0, instance:com.FabHotel_MVN_sprint1.Search_HotelTest@28ac3dc3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:com.FabHotel_MVN_sprint1.Search_HotelTest@28ac3dc3]" name="endTest" is-config="true" duration-ms="64" started-at="2018-08-09T14:38:33Z" finished-at="2018-08-09T14:38:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- com.FabHotel_MVN_sprint1.Search_HotelTest -->
      <class name="com.FabHotel_MVN_sprint1.HomePageTest">
        <test-method status="PASS" signature="launchBrowser()[pri:0, instance:com.FabHotel_MVN_sprint1.HomePageTest@23fe1d71]" name="launchBrowser" is-config="true" duration-ms="16895" started-at="2018-08-09T14:37:56Z" finished-at="2018-08-09T14:38:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.FabHotel_MVN_sprint1.HomePageTest@23fe1d71]" name="beforeMethod" is-config="true" duration-ms="4" started-at="2018-08-09T14:38:13Z" finished-at="2018-08-09T14:38:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.FabHotel_MVN_sprint1.HomePageTest.testHomePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testHomePage()[pri:0, instance:com.FabHotel_MVN_sprint1.HomePageTest@23fe1d71]" name="testHomePage" duration-ms="9093" started-at="2018-08-09T14:38:13Z" finished-at="2018-08-09T14:38:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHomePage -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:com.FabHotel_MVN_sprint1.HomePageTest@23fe1d71]" name="endTest" is-config="true" duration-ms="1061" started-at="2018-08-09T14:38:22Z" finished-at="2018-08-09T14:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.FabHotel_MVN_sprint1.HomePageTest@23fe1d71]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-08-09T14:38:22Z" finished-at="2018-08-09T14:38:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHomePage status=SUCCESS method=HomePageTest.testHomePage()[pri:0, instance:com.FabHotel_MVN_sprint1.HomePageTest@23fe1d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.FabHotel_MVN_sprint1.HomePageTest -->
    </test> <!-- Regression Testing -->
  </suite> <!-- Regression Suite -->
</testng-results>
